{"ast":null,"code":"import { fetchLeagueListsPending, fetchLeagueListsSuccess, fetchLeagueListsError } from '../actions/action';\n\nconst fetchLeagueListAPI = () => {\n  const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n  const url = 'https://www.api-football.com/demo/api/v2/leagues';\n  var res;\n  return dispatch => {\n    dispatch(fetchLeagueListsPending());\n    fetch(proxyUrl + url).then(res => res.json()).then(res => {\n      if (res.error) {\n        throw res.error;\n      }\n\n      dispatch(fetchLeagueListsSuccess(res));\n      return res.listLeague;\n    }).catch(error => {\n      dispatch(fetchLeagueListsError(error));\n    });\n  };\n};\n\nexport default fetchLeagueListAPI;","map":{"version":3,"sources":["d:\\WEB_DEVELOP\\Front_End\\ReactJS\\BaiTap\\Test_ReactJS\\livestream-react-redux\\src\\fetchApi\\fetchLeague.js"],"names":["fetchLeagueListsPending","fetchLeagueListsSuccess","fetchLeagueListsError","fetchLeagueListAPI","proxyUrl","url","res","dispatch","fetch","then","json","error","listLeague","catch"],"mappings":"AAAA,SAAQA,uBAAR,EAAgCC,uBAAhC,EAAwDC,qBAAxD,QAAoF,mBAApF;;AACA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,QAAMC,QAAQ,GAAG,sCAAjB;AACA,QAAMC,GAAG,GAAG,kDAAZ;AACA,MAAIC,GAAJ;AACA,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACP,uBAAuB,EAAxB,CAAR;AACAQ,IAAAA,KAAK,CAACJ,QAAQ,GAACC,GAAV,CAAL,CACCI,IADD,CACMH,GAAG,IAAIA,GAAG,CAACI,IAAJ,EADb,EAECD,IAFD,CAEMH,GAAG,IAAI;AACT,UAAGA,GAAG,CAACK,KAAP,EAAc;AACV,cAAML,GAAG,CAACK,KAAV;AACH;;AACDJ,MAAAA,QAAQ,CAACN,uBAAuB,CAACK,GAAD,CAAxB,CAAR;AACA,aAAOA,GAAG,CAACM,UAAX;AACH,KARD,EASCC,KATD,CASOF,KAAK,IAAI;AACZJ,MAAAA,QAAQ,CAACL,qBAAqB,CAACS,KAAD,CAAtB,CAAR;AACH,KAXD;AAYH,GAdD;AAeH,CAnBD;;AAoBA,eAAeR,kBAAf","sourcesContent":["import {fetchLeagueListsPending,fetchLeagueListsSuccess,fetchLeagueListsError} from '../actions/action';\r\nconst fetchLeagueListAPI = () => {\r\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n    const url = 'https://www.api-football.com/demo/api/v2/leagues';\r\n    var res \r\n    return dispatch => {\r\n        dispatch(fetchLeagueListsPending());\r\n        fetch(proxyUrl+url)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                throw(res.error);\r\n            }\r\n            dispatch(fetchLeagueListsSuccess(res));\r\n            return res.listLeague;\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchLeagueListsError(error));\r\n        })\r\n    }\r\n}\r\nexport default fetchLeagueListAPI;"]},"metadata":{},"sourceType":"module"}